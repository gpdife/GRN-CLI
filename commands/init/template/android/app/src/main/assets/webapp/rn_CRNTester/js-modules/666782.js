__d(function(g,r,i,a,m,e,d){'use strict';var n=r(d[0]),t=r(d[1]),o=r(d[2]),c=r(d[3]),s=r(d[4]),l=r(d[5]),u=r(d[6]),h=u.NetInfo,f=u.Text,v=u.View,p=u.TouchableWithoutFeedback,C=(function(u){function p(){var t,s;n(this,p);for(var l=arguments.length,u=new Array(l),h=0;h<l;h++)u[h]=arguments[h];return(s=o(this,(t=c(p)).call.apply(t,[this].concat(u)))).state={connectionInfoHistory:[]},s._handleConnectionInfoChange=function(n){var t=s.state.connectionInfoHistory.slice();t.push(n),s.setState({connectionInfoHistory:t})},s}return s(p,u),t(p,[{key:"componentDidMount",value:function(){h.addEventListener('change',this._handleConnectionInfoChange)}},{key:"componentWillUnmount",value:function(){h.removeEventListener('change',this._handleConnectionInfoChange)}},{key:"render",value:function(){return l.createElement(v,null,l.createElement(f,null,JSON.stringify(this.state.connectionInfoHistory)))}}]),p})(l.Component),y=(function(u){function p(){var t,s;n(this,p);for(var l=arguments.length,u=new Array(l),h=0;h<l;h++)u[h]=arguments[h];return(s=o(this,(t=c(p)).call.apply(t,[this].concat(u)))).state={connectionInfo:null},s._handleConnectionInfoChange=function(n){s.setState({connectionInfo:n})},s}return s(p,u),t(p,[{key:"componentDidMount",value:function(){var n=this;h.addEventListener('change',this._handleConnectionInfoChange),h.fetch().done(function(t){n.setState({connectionInfo:t})})}},{key:"componentWillUnmount",value:function(){h.removeEventListener('change',this._handleConnectionInfoChange)}},{key:"render",value:function(){return l.createElement(v,null,l.createElement(f,null,this.state.connectionInfo))}}]),p})(l.Component),E=(function(u){function p(){var t,s;n(this,p);for(var l=arguments.length,u=new Array(l),h=0;h<l;h++)u[h]=arguments[h];return(s=o(this,(t=c(p)).call.apply(t,[this].concat(u)))).state={isConnected:null},s._handleConnectivityChange=function(n){s.setState({isConnected:n})},s}return s(p,u),t(p,[{key:"componentDidMount",value:function(){var n=this;h.isConnected.addEventListener('change',this._handleConnectivityChange),h.isConnected.fetch().done(function(t){n.setState({isConnected:t})})}},{key:"componentWillUnmount",value:function(){h.isConnected.removeEventListener('change',this._handleConnectivityChange)}},{key:"render",value:function(){return l.createElement(v,null,l.createElement(f,null,this.state.isConnected?'Online':'Offline'))}}]),p})(l.Component),I=(function(u){function C(){var t,s;n(this,C);for(var l=arguments.length,u=new Array(l),f=0;f<l;f++)u[f]=arguments[f];return(s=o(this,(t=c(C)).call.apply(t,[this].concat(u)))).state={isConnectionExpensive:null},s._checkIfExpensive=function(){h.isConnectionExpensive().then(function(n){s.setState({isConnectionExpensive:n})})},s}return s(C,u),t(C,[{key:"render",value:function(){return l.createElement(v,null,l.createElement(p,{onPress:this._checkIfExpensive},l.createElement(v,null,l.createElement(f,null,"Click to see if connection is expensive:",!0===this.state.isConnectionExpensive?'Expensive':!1===this.state.isConnectionExpensive?'Not expensive':'Unknown'))))}}]),C})(l.Component);e.title='NetInfo',e.description='Monitor network status',e.examples=[{title:'NetInfo.isConnected',description:'Asynchronously load and observe connectivity',render:function(){return l.createElement(E,null)}},{title:'NetInfo.update',description:'Asynchronously load and observe connectionInfo',render:function(){return l.createElement(y,null)}},{title:'NetInfo.updateHistory',description:'Observed updates to connectionInfo',render:function(){return l.createElement(C,null)}},{platform:'android',title:'NetInfo.isConnectionExpensive (Android)',description:'Asynchronously check isConnectionExpensive',render:function(){return l.createElement(I,null)}}]},666782,[3,4,5,8,9,11,15]);